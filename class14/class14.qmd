---
title: "Class 14: RNASeq Mini Project"
author: "Christopher Brockie (PID: A16280405)"
format: pdf
---

## About our input data

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1. 

## Data Import

First we must call the DESeq package and load our data files
```{r}
#| message: false
#Call DESeq2
library(DESeq2)
```
```{r}
#Read and assign data files
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import files
colData = read.csv(metaFile, row.names=1)
countData = read.csv(countFile, row.names=1)
```

Remember that we need the `countData` and `colData` files to match up so we will need to remove that odd first column in countData namely contData$length.

> Q. Complete the code below to remove the troublesome first column from countData

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

> Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
# Filter count data where you have 0 read count across all samples.
countData = countData[rowSums(countData != 0) > 0, ]
head(countData)
```

> Q. How many genes do we have left?

```{r}
nrow(countData)
```

## DESeq setup and analysis

Now lets setup the DESeqDataSet object required for the `DESeq()` function and then run the DESeq pipeline.
```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```
```{r}
dds
```

Next, get results for the HoxA1 knockdown versus control siRNA (remember that these were labeled as "hoxa1_kd" and "control_sirna" in our original colData metaFile input to DESeq, you can check this above and by running `resultsNames(dds)` command).
```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```
```{r}
head(res)
```

> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

## Volcano plot

Now we will make a volcano plot, it's a plot of log2 fold change vs -log adjusted p-value.
```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
abline(v=c(-2,2))
abline(h=-log(0.05))
```

## Adding gene annotation

Since we mapped and counted against the Ensembl annotation, our results only have information about Ensembl gene IDs. However, our pathway analysis downstream will use KEGG pathways, and genes in KEGG pathways are annotated with Entrez gene IDs. We need to add them.

> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

## Save results

> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
write.csv(res, file="myresults.csv")
```

## Geneset enrichment

I will use KEGG and GO...

```{r}
#| message: false
library(gage)
library(gageData)
library(pathview)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

Make my input vector of importance for `gage()`
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Run `gage()` with `kegg.sets.hs`
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less, 3)
```

The top two here (hsa04110 and hsa03030) appear to be the main sets picked out. I will now use `pathview()` to pull these pathways and color up my genes that intersect with these two pathways
```{r}
#| message: false
pathview(gene.data=foldchanges, pathway.id="hsa04110")
pathview(gene.data=foldchanges, pathway.id="hsa03030")
```

And insert into my report here:

![Cell cycle genes](hsa04110.pathview.png)

![DNA replication genes](hsa03030.pathview.png)

> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 down-regulated pathways 
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```
```{r}
#| message: false
#Pass keggresids through pathview function
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![Top 5 down-regulated pathways](hsa04110.pathview.png)

## Gene Ontology

We can also do a similar procedure with gene ontology. Similar to above, go.sets.hs has all GO terms. go.subs.hs is a named list containing indexes for the BP, CC, and MF ontologies. Let’s focus on BP (a.k.a Biological Process) here.

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

## Reactome Analysis

We can use reactome as either its (original) R package or via its newer online web-server. The latter has some potentially usegul pathway viewing finctionality so let's try it out online (https://reactome.org/)

To use it online we need a list of significant genes at the alpha < 0.05 level as a plain text file. We can make this in R like this:
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]

write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

Now upload this file to the reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT)

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

*The mitotic cell cycle pathway has the most significant p-value at 5.28E-4. Some of the most significant pathways match the KEGG results, but some do not. This may be because some of the nonmatching KEGG results are involved in the cell cycle, but are not explicitly linked to it.*

![Highlighted significant pathways from Reactome pathway browser](PathwaysOverview.png)

## GO Online

Gene Set Gene Ontology (GO) Enrichment is a method to determine over-represented or under-represented GO terms for a given set of genes. GO terms are formal structured controlled vocabularies (ontologies) for gene products in terms of their biological function. The goal of this analysis is to determine the biological process the given set of genes are associated with.

Upload the significant gene list into the Gene Set GO Enrichment website (http://www.geneontology.org/page/go-enrichment-analysis)

![GO Enrichment Results from Significant Genes](GO list.png)

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

*The most significant pathway appears to be "regulation of cell migration involved in sprouting angiogenesis". This can be loosely matched with the KEGG results involving morphogenesis, but does not exactly match the results. This difference could be due to the genes from the KEGG results participating in a wide variety of cellular processes, resulting in enrichment GO to yield wider and more specific results.*